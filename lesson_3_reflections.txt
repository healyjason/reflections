Question When would you want to create a remote repository rather than keeping all your work local?
Answer I would create a file on a remote repository possibly because I wanted to keep it separate to my local repository for some reason.
Or maybe if I want to share the file with others.
Or maybe if I want others to help me to edit it.
Question Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Answer Because the changes I make on my remote repository on for example GitHub may be experimental or maybe they involve collaborations
Maybe my offline git repository is working fine so if it always auto updated to be in synch with my remote repository then maybe a contributor or myself may have made changes leading to a bug
It may be of benefit to have two repositories when experimenting or when in development
Question Describe the differences between forks, clones, and branches. When would you use one instead of another?
Answer A fork is created on GitHub and it means I effectively clone another person's repository to my own profile. Equally, people may fork my public repositories too
A clone is where I either locally clone a repository or I clone from a remote repository for example on git hub so that it is downloaded to my computer and I can use, edit, change the code
A branch is where I create a parallel offshoot from an existing branch such as for example master. This enables me to edit both branches separately such as when maybe I want to experiment with an offshoot branch without harming the master or the original branch
Also I can merge branches together if I want to later
Question What is the benefit of having a copy of the last known state of the remote stored locally?
Answer It allows for offline comparison between the master and the origin/master stored offline (remote). 
It also helps to create better fetching, merging, and pulling because the local origin/master will be compared to the remote master before any such actions are taken so that not all the information is downloaded needlessly
Also it means that any changes I have made locally to master can be compared to the most up to date commits on the local origin master and the remote origin master to discover any divergence and/or conflicts which may need to be resolved before any merging of the two occurs
Question How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Answer I am not sure. Maybe two people could collaborate on the same machine taking turns
Or maybe two people could work independently on two machines and find a way of sharing repositories on things like usb sticks or other kinds of online repositories
Question When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
Answer I might make changes in a separate branch rather than master if I was experimenting with a change or a bug fix or a new feature and wanted to test my change out safely separate from the master or if I want feedback and or input from collaborators
I might also use other branches when working with collaborators on git hub so that I can pull down their work or branches from git hub into a local branch on my local repository and see what their changes do before I merge and commit those external branch changes to my master
I might also use a separate branch if I want two different versions of a code e.g. easy and hard mode in a game
Working just with the master branch has the benefits that version control is quite complicated and potentially confusing however it does not allow for the same amount of collaboration or experimentation, but it does offer, through git bash, the options to track my changes to the master branch in order to follow all the changes i make through commits that may enable me to revert back to an earlier version if need be such as for example if future changes do not work out as hoped or if they cause unfixable bugs
